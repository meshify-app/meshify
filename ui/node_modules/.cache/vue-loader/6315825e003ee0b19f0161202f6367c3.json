{"remainingRequest":"/home/alangrah/go/src/wg-gen-web/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alangrah/go/src/wg-gen-web/ui/src/components/Clients.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/alangrah/go/src/wg-gen-web/ui/src/components/Clients.vue","mtime":1598152476762},{"path":"/home/alangrah/go/src/wg-gen-web/ui/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/alangrah/go/src/wg-gen-web/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alangrah/go/src/wg-gen-web/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMsIG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDbGllbnRzJywKCiAgZGF0YTogKCkgPT4gKHsKICAgIGxpc3RWaWV3OiBmYWxzZSwKICAgIGRpYWxvZ0NyZWF0ZTogZmFsc2UsCiAgICBkaWFsb2dVcGRhdGU6IGZhbHNlLAogICAgY2xpZW50OiBudWxsLAogICAgdmFsaWQ6IGZhbHNlLAogICAgc2VhcmNoOiAnJywKICAgIGhlYWRlcnM6IFsKICAgICAgeyB0ZXh0OiAnTmFtZScsIHZhbHVlOiAnbmFtZScsIH0sCiAgICAgIHsgdGV4dDogJ0VtYWlsJywgdmFsdWU6ICdlbWFpbCcsIH0sCiAgICAgIHsgdGV4dDogJ0lQIGFkZHJlc3NlcycsIHZhbHVlOiAnYWRkcmVzcycsIH0sCiAgICAgIHsgdGV4dDogJ1RhZ3MnLCB2YWx1ZTogJ3RhZ3MnLCB9LAogICAgICB7IHRleHQ6ICdDcmVhdGVkJywgdmFsdWU6ICdjcmVhdGVkJywgc29ydGFibGU6IGZhbHNlLCB9LAogICAgICB7IHRleHQ6ICdVcGRhdGVkJywgdmFsdWU6ICd1cGRhdGVkJywgc29ydGFibGU6IGZhbHNlLCB9LAogICAgICB7IHRleHQ6ICdBY3Rpb25zJywgdmFsdWU6ICdhY3Rpb24nLCBzb3J0YWJsZTogZmFsc2UsIH0sCgogICAgXSwKICB9KSwKCiAgY29tcHV0ZWQ6ewogICAgLi4ubWFwR2V0dGVycyh7CiAgICAgIGdldENsaWVudFFyY29kZTogJ2NsaWVudC9nZXRDbGllbnRRcmNvZGUnLAogICAgICBnZXRDbGllbnRDb25maWc6ICdjbGllbnQvZ2V0Q2xpZW50Q29uZmlnJywKICAgICAgc2VydmVyOiAnc2VydmVyL3NlcnZlcicsCiAgICAgIGNsaWVudHM6ICdjbGllbnQvY2xpZW50cycsCiAgICAgIGNsaWVudFFyY29kZXM6ICdjbGllbnQvY2xpZW50UXJjb2RlcycsCiAgICB9KSwKICB9LAoKICBtb3VudGVkICgpIHsKICAgIHRoaXMucmVhZEFsbENsaWVudHMoKQogICAgdGhpcy5yZWFkU2VydmVyKCkKICB9LAoKICBtZXRob2RzOiB7CiAgICAuLi5tYXBBY3Rpb25zKCdjbGllbnQnLCB7CiAgICAgIGVycm9yQ2xpZW50OiAnZXJyb3InLAogICAgICByZWFkQWxsQ2xpZW50czogJ3JlYWRBbGwnLAogICAgICBjcmVhdENsaWVudDogJ2NyZWF0ZScsCiAgICAgIHVwZGF0ZUNsaWVudDogJ3VwZGF0ZScsCiAgICAgIGRlbGV0ZUNsaWVudDogJ2RlbGV0ZScsCiAgICAgIGVtYWlsQ2xpZW50OiAnZW1haWwnLAogICAgfSksCiAgICAuLi5tYXBBY3Rpb25zKCdzZXJ2ZXInLCB7CiAgICAgIHJlYWRTZXJ2ZXI6ICdyZWFkJywKICAgIH0pLAoKICAgIHN0YXJ0Q3JlYXRlKCkgewogICAgICB0aGlzLmNsaWVudCA9IHsKICAgICAgICBuYW1lOiAiIiwKICAgICAgICBlbWFpbDogIiIsCiAgICAgICAgZW5hYmxlOiB0cnVlLAogICAgICAgIGFsbG93ZWRJUHM6IHRoaXMuc2VydmVyLmFsbG93ZWRpcHMsCiAgICAgICAgYWRkcmVzczogdGhpcy5zZXJ2ZXIuYWRkcmVzcywKICAgICAgICB0YWdzOiBbXSwKICAgICAgfQogICAgICB0aGlzLmRpYWxvZ0NyZWF0ZSA9IHRydWU7CiAgICB9LAoKICAgIGNyZWF0ZShjbGllbnQpIHsKICAgICAgaWYgKGNsaWVudC5hbGxvd2VkSVBzLmxlbmd0aCA8IDEpIHsKICAgICAgICB0aGlzLmVycm9yQ2xpZW50KCdQbGVhc2UgcHJvdmlkZSBhdCBsZWFzdCBvbmUgdmFsaWQgQ0lEUiBhZGRyZXNzIGZvciBjbGllbnQgYWxsb3dlZCBJUHMnKQogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNsaWVudC5hbGxvd2VkSVBzLmxlbmd0aDsgaSsrKXsKICAgICAgICBpZiAodGhpcy4kaXNDaWRyKGNsaWVudC5hbGxvd2VkSVBzW2ldKSA9PT0gMCkgewogICAgICAgICAgdGhpcy5lcnJvckNsaWVudCgnSW52YWxpZCBDSURSIGRldGVjdGVkLCBwbGVhc2UgY29ycmVjdCBiZWZvcmUgc3VibWl0dGluZycpCiAgICAgICAgICByZXR1cm4KICAgICAgICB9CiAgICAgIH0KICAgICAgdGhpcy5kaWFsb2dDcmVhdGUgPSBmYWxzZTsKICAgICAgdGhpcy5jcmVhdENsaWVudChjbGllbnQpCiAgICB9LAoKICAgIHJlbW92ZShjbGllbnQpIHsKICAgICAgaWYoY29uZmlybShgRG8geW91IHJlYWxseSB3YW50IHRvIGRlbGV0ZSAke2NsaWVudC5uYW1lfSA/YCkpewogICAgICAgIHRoaXMuZGVsZXRlQ2xpZW50KGNsaWVudCkKICAgICAgfQogICAgfSwKCiAgICBlbWFpbChjbGllbnQpIHsKICAgICAgaWYgKCFjbGllbnQuZW1haWwpewogICAgICAgIHRoaXMuZXJyb3JDbGllbnQoJ0NsaWVudCBlbWFpbCBpcyBub3QgZGVmaW5lZCcpCiAgICAgICAgcmV0dXJuCiAgICAgIH0KCiAgICAgIGlmKGNvbmZpcm0oYERvIHlvdSByZWFsbHkgd2FudCB0byBzZW5kIGVtYWlsIHRvICR7Y2xpZW50LmVtYWlsfSB3aXRoIGFsbCBjb25maWd1cmF0aW9ucyA/YCkpewogICAgICAgIHRoaXMuZW1haWxDbGllbnQoY2xpZW50KQogICAgICB9CiAgICB9LAoKICAgIHN0YXJ0VXBkYXRlKGNsaWVudCkgewogICAgICB0aGlzLmNsaWVudCA9IGNsaWVudDsKICAgICAgdGhpcy5kaWFsb2dVcGRhdGUgPSB0cnVlOwogICAgfSwKCiAgICB1cGRhdGUoY2xpZW50KSB7CiAgICAgIC8vIGNoZWNrIGFsbG93ZWQgSVBzCiAgICAgIGlmIChjbGllbnQuYWxsb3dlZElQcy5sZW5ndGggPCAxKSB7CiAgICAgICAgdGhpcy5lcnJvckNsaWVudCgnUGxlYXNlIHByb3ZpZGUgYXQgbGVhc3Qgb25lIHZhbGlkIENJRFIgYWRkcmVzcyBmb3IgY2xpZW50IGFsbG93ZWQgSVBzJyk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2xpZW50LmFsbG93ZWRJUHMubGVuZ3RoOyBpKyspewogICAgICAgIGlmICh0aGlzLiRpc0NpZHIoY2xpZW50LmFsbG93ZWRJUHNbaV0pID09PSAwKSB7CiAgICAgICAgICB0aGlzLmVycm9yQ2xpZW50KCdJbnZhbGlkIENJRFIgZGV0ZWN0ZWQsIHBsZWFzZSBjb3JyZWN0IGJlZm9yZSBzdWJtaXR0aW5nJyk7CiAgICAgICAgICByZXR1cm4KICAgICAgICB9CiAgICAgIH0KICAgICAgLy8gY2hlY2sgYWRkcmVzcwogICAgICBpZiAoY2xpZW50LmFkZHJlc3MubGVuZ3RoIDwgMSkgewogICAgICAgIHRoaXMuZXJyb3JDbGllbnQoJ1BsZWFzZSBwcm92aWRlIGF0IGxlYXN0IG9uZSB2YWxpZCBDSURSIGFkZHJlc3MgZm9yIGNsaWVudCcpOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNsaWVudC5hZGRyZXNzLmxlbmd0aDsgaSsrKXsKICAgICAgICBpZiAodGhpcy4kaXNDaWRyKGNsaWVudC5hZGRyZXNzW2ldKSA9PT0gMCkgewogICAgICAgICAgdGhpcy5lcnJvckNsaWVudCgnSW52YWxpZCBDSURSIGRldGVjdGVkLCBwbGVhc2UgY29ycmVjdCBiZWZvcmUgc3VibWl0dGluZycpOwogICAgICAgICAgcmV0dXJuCiAgICAgICAgfQogICAgICB9CiAgICAgIC8vIGFsbCBnb29kLCBzdWJtaXQKICAgICAgdGhpcy5kaWFsb2dVcGRhdGUgPSBmYWxzZTsKICAgICAgdGhpcy51cGRhdGVDbGllbnQoY2xpZW50KQogICAgfSwKCiAgICBmb3JjZUZpbGVEb3dubG9hZChjbGllbnQpewogICAgICBsZXQgY29uZmlnID0gdGhpcy5nZXRDbGllbnRDb25maWcoY2xpZW50LmlkKQogICAgICBpZiAoIWNvbmZpZykgewogICAgICAgIHRoaXMuZXJyb3JDbGllbnQoJ0ZhaWxlZCB0byBkb3dubG9hZCBjbGllbnQgY29uZmlnJyk7CiAgICAgICAgcmV0dXJuCiAgICAgIH0KICAgICAgY29uc3QgdXJsID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwobmV3IEJsb2IoW2NvbmZpZ10pKQogICAgICBjb25zdCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpCiAgICAgIGxpbmsuaHJlZiA9IHVybAogICAgICBsaW5rLnNldEF0dHJpYnV0ZSgnZG93bmxvYWQnLCBjbGllbnQubmFtZS5zcGxpdCgnICcpLmpvaW4oJy0nKSArICcuY29uZicpIC8vb3IgYW55IG90aGVyIGV4dGVuc2lvbgogICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGxpbmspCiAgICAgIGxpbmsuY2xpY2soKQogICAgfSwKICB9Cn07Cg=="},{"version":3,"sources":["Clients.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAidfile":"Clients.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-container>\n        <v-card>\n            <v-card-title>\n                Clients\n                <v-switch\n                        class=\"ml-3\"\n                        dark\n                        :label=\"listView ? 'Switch to card view' : 'Switch to list view'\"\n                        v-model=\"listView\"\n                />\n                <v-spacer></v-spacer>\n                <v-text-field\n                        v-if=\"listView\"\n                        v-model=\"search\"\n                        append-icon=\"mdi-magnify\"\n                        label=\"Search\"\n                        single-line\n                        hide-details\n                ></v-text-field>\n                <v-spacer></v-spacer>\n                <v-btn\n                        color=\"success\"\n                        @click=\"startCreate\"\n                >\n                    Add new client\n                    <v-icon right dark>mdi-account-multiple-plus-outline</v-icon>\n                </v-btn>\n            </v-card-title>\n            <v-data-table\n                    v-if=\"listView\"\n                    :headers=\"headers\"\n                    :items=\"clients\"\n                    :search=\"search\"\n            >\n                <template v-slot:item.address=\"{ item }\">\n                    <v-chip\n                            v-for=\"(ip, i) in item.address\"\n                            :key=\"i\"\n                            color=\"indigo\"\n                            text-color=\"white\"\n                    >\n                        <v-icon left>mdi-ip-network</v-icon>\n                        {{ ip }}\n                    </v-chip>\n                </template>\n                <template v-slot:item.tags=\"{ item }\">\n                    <v-chip\n                            v-for=\"(tag, i) in item.tags\"\n                            :key=\"i\"\n                            color=\"blue-grey\"\n                            text-color=\"white\"\n                    >\n                        <v-icon left>mdi-tag</v-icon>\n                        {{ tag }}\n                    </v-chip>\n                </template>\n                <template v-slot:item.created=\"{ item }\">\n                    <v-row>\n                        <p>At {{ item.created | formatDate }} by {{ item.createdBy }}</p>\n                    </v-row>\n                </template>\n                <template v-slot:item.updated=\"{ item }\">\n                    <v-row>\n                        <p>At {{ item.updated | formatDate }} by {{ item.updatedBy }}</p>\n                    </v-row>\n                </template>\n                <template v-slot:item.action=\"{ item }\">\n                    <v-row>\n                        <v-icon\n                                class=\"pr-1 pl-1\"\n                                @click.stop=\"startUpdate(item)\"\n                        >\n                            mdi-square-edit-outline\n                        </v-icon>\n                        <v-icon\n                                class=\"pr-1 pl-1\"\n                                @click.stop=\"forceFileDownload(item)\"\n                        >\n                            mdi-cloud-download-outline\n                        </v-icon>\n                        <v-icon\n                                class=\"pr-1 pl-1\"\n                                @click.stop=\"email(item)\"\n                        >\n                            mdi-email-send-outline\n                        </v-icon>\n                        <v-icon\n                                class=\"pr-1 pl-1\"\n                                @click=\"remove(item)\"\n                        >\n                            mdi-trash-can-outline\n                        </v-icon>\n                        <v-switch\n                                dark\n                                class=\"pr-1 pl-1\"\n                                color=\"success\"\n                                v-model=\"item.enable\"\n                                v-on:change=\"update(item)\"\n                        />\n                    </v-row>\n                </template>\n\n            </v-data-table>\n            <v-card-text v-else>\n                <v-row>\n                    <v-col\n                            v-for=\"(client, i) in clients\"\n                            :key=\"i\"\n                            sm12 lg6\n                    >\n                        <v-card\n                                :color=\"client.enable ? '#1F7087' : 'warning'\"\n                                class=\"mx-auto\"\n                                raised\n                                shaped\n                        >\n                            <v-list-item>\n                                <v-list-item-content>\n                                    <v-list-item-title class=\"headline\">{{ client.name }}</v-list-item-title>\n                                    <v-list-item-subtitle>{{ client.email }}</v-list-item-subtitle>\n                                    <v-list-item-subtitle>Created: {{ client.created | formatDate }} by {{ client.createdBy }}</v-list-item-subtitle>\n                                    <v-list-item-subtitle>Updated: {{ client.updated | formatDate }} by {{ client.updatedBy }}</v-list-item-subtitle>\n                                </v-list-item-content>\n\n                                <v-list-item-avatar\n                                        tile\n                                        size=\"150\"\n                                >\n                                    <v-img :src=\"'data:image/png;base64, ' + getClientQrcode(client.id)\"/>\n                                </v-list-item-avatar>\n                            </v-list-item>\n\n                            <v-card-text class=\"text--primary\">\n                                <v-chip\n                                        v-for=\"(ip, i) in client.address\"\n                                        :key=\"i\"\n                                        color=\"indigo\"\n                                        text-color=\"white\"\n                                >\n                                    <v-icon left>mdi-ip-network</v-icon>\n                                    {{ ip }}\n                                </v-chip>\n                            </v-card-text>\n                            <v-card-text class=\"text--primary\">\n                                <v-chip\n                                        v-for=\"(tag, i) in client.tags\"\n                                        :key=\"i\"\n                                        color=\"blue-grey\"\n                                        text-color=\"white\"\n                                >\n                                    <v-icon left>mdi-tag</v-icon>\n                                    {{ tag }}\n                                </v-chip>\n                            </v-card-text>\n                            <v-card-actions>\n                                <v-tooltip bottom>\n                                    <template v-slot:activator=\"{ on }\">\n                                        <v-btn\n                                                text\n                                                v-on:click=\"forceFileDownload(client)\"\n                                                v-on=\"on\"\n                                        >\n                                            <span class=\"d-none d-lg-flex\">Download</span>\n                                            <v-icon right dark>mdi-cloud-download-outline</v-icon>\n                                        </v-btn>\n                                    </template>\n                                    <span>Download</span>\n                                </v-tooltip>\n\n                                <v-tooltip bottom>\n                                    <template v-slot:activator=\"{ on }\">\n                                        <v-btn\n                                                text\n                                                @click.stop=\"startUpdate(client)\"\n                                                v-on=\"on\"\n                                        >\n                                            <span class=\"d-none d-lg-flex\">Edit</span>\n                                            <v-icon right dark>mdi-square-edit-outline</v-icon>\n                                        </v-btn>\n                                    </template>\n                                    <span>Edit</span>\n                                </v-tooltip>\n\n                                <v-tooltip bottom>\n                                    <template v-slot:activator=\"{ on }\">\n                                        <v-btn\n                                                text\n                                                @click=\"remove(client)\"\n                                                v-on=\"on\"\n                                        >\n                                            <span class=\"d-none d-lg-flex\">Delete</span>\n                                            <v-icon right dark>mdi-trash-can-outline</v-icon>\n                                        </v-btn>\n                                    </template>\n                                    <span>Delete</span>\n                                </v-tooltip>\n\n                                <v-tooltip bottom>\n                                    <template v-slot:activator=\"{ on }\">\n                                        <v-btn\n                                                text\n                                                @click=\"email(client)\"\n                                                v-on=\"on\"\n                                        >\n                                            <span class=\"d-none d-lg-flex\">Send Email</span>\n                                            <v-icon right dark>mdi-email-send-outline</v-icon>\n                                        </v-btn>\n                                    </template>\n                                    <span>Send Email</span>\n                                </v-tooltip>\n                                <v-spacer/>\n                                <v-tooltip right>\n                                    <template v-slot:activator=\"{ on }\">\n                                        <v-switch\n                                                dark\n                                                v-on=\"on\"\n                                                color=\"success\"\n                                                v-model=\"client.enable\"\n                                                v-on:change=\"update(client)\"\n                                        />\n                                    </template>\n                                    <span> {{client.enable ? 'Disable' : 'Enable'}} this client</span>\n                                </v-tooltip>\n\n                            </v-card-actions>\n                        </v-card>\n                    </v-col>\n                </v-row>\n            </v-card-text>\n        </v-card>\n        <v-dialog\n                v-if=\"client\"\n                v-model=\"dialogCreate\"\n                max-width=\"550\"\n        >\n            <v-card>\n                <v-card-title class=\"headline\">Add new client</v-card-title>\n                <v-card-text>\n                    <v-row>\n                        <v-col\n                                cols=\"12\"\n                        >\n                            <v-form\n                                    ref=\"form\"\n                                    v-model=\"valid\"\n                            >\n                                <v-text-field\n                                        v-model=\"client.name\"\n                                        label=\"Client friendly name\"\n                                        :rules=\"[ v => !!v || 'Client name is required', ]\"\n                                        required\n                                />\n                                <v-text-field\n                                        v-model=\"client.email\"\n                                        label=\"Client email\"\n                                        :rules=\"[ v => (/.+@.+\\..+/.test(v) || v === '') || 'E-mail must be valid',]\"\n                                />\n                                <v-select\n                                        v-model=\"client.address\"\n                                        :items=\"server.address\"\n                                        label=\"Client IP will be chosen from these networks\"\n                                        :rules=\"[ v => !!v || 'Network is required', ]\"\n                                        multiple\n                                        chips\n                                        persistent-hint\n                                        required\n                                />\n                                <v-combobox\n                                        v-model=\"client.allowedIPs\"\n                                        chips\n                                        hint=\"Write IPv4 or IPv6 CIDR and hit enter\"\n                                        label=\"Allowed IPs\"\n                                        multiple\n                                        dark\n                                >\n                                    <template v-slot:selection=\"{ attrs, item, select, selected }\">\n                                        <v-chip\n                                                v-bind=\"attrs\"\n                                                :input-value=\"selected\"\n                                                close\n                                                @click=\"select\"\n                                                @click:close=\"client.allowedIPs.splice(client.allowedIPs.indexOf(item), 1)\"\n                                        >\n                                            <strong>{{ item }}</strong>&nbsp;\n                                        </v-chip>\n                                    </template>\n                                </v-combobox>\n                                <v-combobox\n                                        v-model=\"client.tags\"\n                                        chips\n                                        hint=\"Write tag name and hit enter\"\n                                        label=\"Tags\"\n                                        multiple\n                                        dark\n                                >\n                                    <template v-slot:selection=\"{ attrs, item, select, selected }\">\n                                        <v-chip\n                                                v-bind=\"attrs\"\n                                                :input-value=\"selected\"\n                                                close\n                                                @click=\"select\"\n                                                @click:close=\"client.tags.splice(client.tags.indexOf(item), 1)\"\n                                        >\n                                            <strong>{{ item }}</strong>&nbsp;\n                                        </v-chip>\n                                    </template>\n                                </v-combobox>\n                                <v-switch\n                                        v-model=\"client.enable\"\n                                        color=\"red\"\n                                        inset\n                                        :label=\"client.enable ? 'Enable client after creation': 'Disable client after creation'\"\n                                />\n                                <v-switch\n                                        v-model=\"client.ignorePersistentKeepalive\"\n                                        color=\"red\"\n                                        inset\n                                        :label=\"'Ignore global persistent keepalive: ' + (client.ignorePersistentKeepalive ? 'Yes': 'NO')\"\n                                />\n                            </v-form>\n                        </v-col>\n                    </v-row>\n                </v-card-text>\n                <v-card-actions>\n                    <v-spacer/>\n                    <v-btn\n                            :disabled=\"!valid\"\n                            color=\"success\"\n                            @click=\"create(client)\"\n                    >\n                        Submit\n                        <v-icon right dark>mdi-check-outline</v-icon>\n                    </v-btn>\n                    <v-btn\n                            color=\"primary\"\n                            @click=\"dialogCreate = false\"\n                    >\n                        Cancel\n                        <v-icon right dark>mdi-close-circle-outline</v-icon>\n                    </v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-dialog>\n        <v-dialog\n                v-if=\"client\"\n                v-model=\"dialogUpdate\"\n                max-width=\"550\"\n        >\n            <v-card>\n                <v-card-title class=\"headline\">Edit client</v-card-title>\n                <v-card-text>\n                    <v-row>\n                        <v-col\n                                cols=\"12\"\n                        >\n                            <v-form\n                                    ref=\"form\"\n                                    v-model=\"valid\"\n                            >\n                                <v-text-field\n                                        v-model=\"client.name\"\n                                        label=\"Friendly name\"\n                                        :rules=\"[ v => !!v || 'Client name is required',]\"\n                                        required\n                                />\n                                <v-text-field\n                                        v-model=\"client.email\"\n                                        label=\"Email\"\n                                        :rules=\"[ v => (/.+@.+\\..+/.test(v) || v === '') || 'E-mail must be valid',]\"\n                                        required\n                                />\n                                <v-combobox\n                                        v-model=\"client.address\"\n                                        chips\n                                        hint=\"Write IPv4 or IPv6 CIDR and hit enter\"\n                                        label=\"Addresses\"\n                                        multiple\n                                        dark\n                                >\n                                    <template v-slot:selection=\"{ attrs, item, select, selected }\">\n                                        <v-chip\n                                                v-bind=\"attrs\"\n                                                :input-value=\"selected\"\n                                                close\n                                                @click=\"select\"\n                                                @click:close=\"client.address.splice(client.address.indexOf(item), 1)\"\n                                        >\n                                            <strong>{{ item }}</strong>&nbsp;\n                                        </v-chip>\n                                    </template>\n                                </v-combobox>\n                                <v-combobox\n                                        v-model=\"client.allowedIPs\"\n                                        chips\n                                        hint=\"Write IPv4 or IPv6 CIDR and hit enter\"\n                                        label=\"Allowed IPs\"\n                                        multiple\n                                        dark\n                                >\n                                    <template v-slot:selection=\"{ attrs, item, select, selected }\">\n                                        <v-chip\n                                                v-bind=\"attrs\"\n                                                :input-value=\"selected\"\n                                                close\n                                                @click=\"select\"\n                                                @click:close=\"client.allowedIPs.splice(client.allowedIPs.indexOf(item), 1)\"\n                                        >\n                                            <strong>{{ item }}</strong>&nbsp;\n                                        </v-chip>\n                                    </template>\n                                </v-combobox>\n                                <v-combobox\n                                        v-model=\"client.tags\"\n                                        chips\n                                        hint=\"Write tag name and hit enter\"\n                                        label=\"Tags\"\n                                        multiple\n                                        dark\n                                >\n                                    <template v-slot:selection=\"{ attrs, item, select, selected }\">\n                                        <v-chip\n                                                v-bind=\"attrs\"\n                                                :input-value=\"selected\"\n                                                close\n                                                @click=\"select\"\n                                                @click:close=\"client.tags.splice(client.tags.indexOf(item), 1)\"\n                                        >\n                                            <strong>{{ item }}</strong>&nbsp;\n                                        </v-chip>\n                                    </template>\n                                </v-combobox>\n                                <v-switch\n                                        v-model=\"client.ignorePersistentKeepalive\"\n                                        color=\"red\"\n                                        inset\n                                        :label=\"'Ignore global persistent keepalive: ' + (client.ignorePersistentKeepalive ? 'Yes': 'NO')\"\n                                />\n                            </v-form>\n                        </v-col>\n                    </v-row>\n                </v-card-text>\n                <v-card-actions>\n                    <v-spacer/>\n                    <v-btn\n                            :disabled=\"!valid\"\n                            color=\"success\"\n                            @click=\"update(client)\"\n                    >\n                        Submit\n                        <v-icon right dark>mdi-check-outline</v-icon>\n                    </v-btn>\n                    <v-btn\n                            color=\"primary\"\n                            @click=\"dialogUpdate = false\"\n                    >\n                        Cancel\n                        <v-icon right dark>mdi-close-circle-outline</v-icon>\n                    </v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-dialog>\n    </v-container>\n</template>\n<script>\n  import { mapActions, mapGetters } from 'vuex'\n\n  export default {\n    name: 'Clients',\n\n    data: () => ({\n      listView: false,\n      dialogCreate: false,\n      dialogUpdate: false,\n      client: null,\n      valid: false,\n      search: '',\n      headers: [\n        { text: 'Name', value: 'name', },\n        { text: 'Email', value: 'email', },\n        { text: 'IP addresses', value: 'address', },\n        { text: 'Tags', value: 'tags', },\n        { text: 'Created', value: 'created', sortable: false, },\n        { text: 'Updated', value: 'updated', sortable: false, },\n        { text: 'Actions', value: 'action', sortable: false, },\n\n      ],\n    }),\n\n    computed:{\n      ...mapGetters({\n        getClientQrcode: 'client/getClientQrcode',\n        getClientConfig: 'client/getClientConfig',\n        server: 'server/server',\n        clients: 'client/clients',\n        clientQrcodes: 'client/clientQrcodes',\n      }),\n    },\n\n    mounted () {\n      this.readAllClients()\n      this.readServer()\n    },\n\n    methods: {\n      ...mapActions('client', {\n        errorClient: 'error',\n        readAllClients: 'readAll',\n        creatClient: 'create',\n        updateClient: 'update',\n        deleteClient: 'delete',\n        emailClient: 'email',\n      }),\n      ...mapActions('server', {\n        readServer: 'read',\n      }),\n\n      startCreate() {\n        this.client = {\n          name: \"\",\n          email: \"\",\n          enable: true,\n          allowedIPs: this.server.allowedips,\n          address: this.server.address,\n          tags: [],\n        }\n        this.dialogCreate = true;\n      },\n\n      create(client) {\n        if (client.allowedIPs.length < 1) {\n          this.errorClient('Please provide at least one valid CIDR address for client allowed IPs')\n          return;\n        }\n        for (let i = 0; i < client.allowedIPs.length; i++){\n          if (this.$isCidr(client.allowedIPs[i]) === 0) {\n            this.errorClient('Invalid CIDR detected, please correct before submitting')\n            return\n          }\n        }\n        this.dialogCreate = false;\n        this.creatClient(client)\n      },\n\n      remove(client) {\n        if(confirm(`Do you really want to delete ${client.name} ?`)){\n          this.deleteClient(client)\n        }\n      },\n\n      email(client) {\n        if (!client.email){\n          this.errorClient('Client email is not defined')\n          return\n        }\n\n        if(confirm(`Do you really want to send email to ${client.email} with all configurations ?`)){\n          this.emailClient(client)\n        }\n      },\n\n      startUpdate(client) {\n        this.client = client;\n        this.dialogUpdate = true;\n      },\n\n      update(client) {\n        // check allowed IPs\n        if (client.allowedIPs.length < 1) {\n          this.errorClient('Please provide at least one valid CIDR address for client allowed IPs');\n          return;\n        }\n        for (let i = 0; i < client.allowedIPs.length; i++){\n          if (this.$isCidr(client.allowedIPs[i]) === 0) {\n            this.errorClient('Invalid CIDR detected, please correct before submitting');\n            return\n          }\n        }\n        // check address\n        if (client.address.length < 1) {\n          this.errorClient('Please provide at least one valid CIDR address for client');\n          return;\n        }\n        for (let i = 0; i < client.address.length; i++){\n          if (this.$isCidr(client.address[i]) === 0) {\n            this.errorClient('Invalid CIDR detected, please correct before submitting');\n            return\n          }\n        }\n        // all good, submit\n        this.dialogUpdate = false;\n        this.updateClient(client)\n      },\n\n      forceFileDownload(client){\n        let config = this.getClientConfig(client.id)\n        if (!config) {\n          this.errorClient('Failed to download client config');\n          return\n        }\n        const url = window.URL.createObjectURL(new Blob([config]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', client.name.split(' ').join('-') + '.conf') //or any other extension\n        document.body.appendChild(link)\n        link.click()\n      },\n    }\n  };\n</script>\n"]}]}